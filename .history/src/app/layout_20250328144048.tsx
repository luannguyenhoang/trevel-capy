import { ChakraProvider } from "@chakra-ui/react";
import { DefaultLayout } from "@/app/components/templates/DefautLayout";
import "../styles/globals.css";
import { Metadata } from 'next'

// export const metadata = {
//   title: "Next.js",
//   description: "Generated by Next.js",
// };

type Props = {
  params: { slug: string }
}

async function getMetadata(slug: string) {
  try {
    const baseUrl = process.env.NEXT_PUBLIC_WORDPRESS_API_URL?.replace('/wp-json/wp/v2', '');
    const fullUrl = `${baseUrl}/${slug}`;
    
    const res = await fetch(`http://du-lich-viet-nam.local/wp-json/rankmath/v1/getHead?url=${fullUrl}`, {
      next: { revalidate: 3600 }
    });
    
    if (!res.ok) {
      throw new Error('Failed to fetch metadata');
    }
    
    return res.json();
  } catch (error) {
    console.error('Error fetching metadata:', error);
    return null;
  }
}

export async function generateMetadata({ params }: Props): Promise<Metadata> {
  const metadata = await getMetadata(params.slug);
  
  return {
    title: metadata?.title || 'Du Lịch Việt Nam',
    description: metadata?.description || 'Khám phá vẻ đẹp Việt Nam',
    openGraph: {
      title: metadata?.title,
      description: metadata?.description,
      images: metadata?.og_image?.[0]?.url ? [metadata.og_image[0].url] : [],
    },
    ...(metadata?.canonical && {
      canonical: metadata.canonical
    })
  }
}

function Providers({ children }: { children: React.ReactNode }) {
  return (
    <ChakraProvider>
      <DefaultLayout>{children}</DefaultLayout>
    </ChakraProvider>
  );
}

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    <html lang="en">
      <body>
        <Providers>{children}</Providers>
      </body>
    </html>
  );
}
